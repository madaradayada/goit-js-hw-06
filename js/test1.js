// напиши скрипт, который на вход принимает строку, на выход отдает массив строк со всеми возможными размещениями точек между букв


// пример:
// > abc
// [ ‘abc’, ‘a.bc’, ‘ab.c’, ‘a.b.c’]

// > abcd
// [ ‘abcd’, ‘a.bcd’, ‘ab.cd’, ‘a.b.cd’ … ]


//  объявляем функцию которой будем передавать строку 'str'
function getWords(str) {
//  объявляем переменную которая испольует метод split() разбивает объект String на массив строк путём
//  разделения строки указанной подстрокой.
  const words = str.split('');
// обьявляем переменную с пустым массивом.
  const variants = [];
// перебераем все значения строки используя цикл  for
  for (let i = 0; i < 2 ** (str.length - 1); i++) {
// объявляем переменную которая принимает  значение 0 элемента строки либо ''
    let variant = str[0] || '';
//  с помощью метода (spread) распыляем коллекцию элементов (строку),
//  используем метод toString() возвращает строку, представляющую объект,
//  с помощью метода padStart() заполняем текущую строку другой строкой так, что итоговая строка достигает
//  заданной длины.
//   и с помощью метода forEach() выполняет указанную функцию один раз для каждого элемента в массиве.
// используем тернарный оператор расставляем точки там где они нужны
    [...i.toString(2).padStart(str.length - 1, '0')].forEach((element, i) => {
      variant += ((element == 0) ? '' : '.') + (str[i + 1] || '');
    });
//  записываем результат в переменную variants используя метод push() который добавляет один или более элементов
//  в конец массива и возвращает новую длину массива.
    variants.push(variant);
    }
//  возвращаем результ
  return variants;
}

//  проверка работы скрипта (результат)
console.log(getWords('abc'));
console.log(getWords('abcd'));

// рефакторинг через стрелочные функции и методы массивов,
// 1. создаем новый массив new
// 2. fill(0) заполняет все элементы массива от начального до конечного индексов одним значением.
// 3. используется метод Map для трансформации массива
// 4. padStart() заполняем текущую строку другой строкой.
// 5. reduce() применяес функцию reducer к каждому элементу массива (слева-направо),
//  возвращая одно результирующее значение.
// function getWords(str) {
//   const words = str.split('');
//   return new Array(2 ** ((str.length || 1) - 1)).fill(0).map((_, i) =>
//     [...i.toString(2).padStart(str.length - 1, '0')].reduce((variant, element, i) =>
//       variant + ((element == 0) ? '' : '.') + (str[i + 1] || ''), str[0] || ''));
// }

//  проверка результата
// console.log(getWords('abc'));